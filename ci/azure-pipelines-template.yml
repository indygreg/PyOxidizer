jobs:
- job: ${{ parameters.name }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      stable:
        rustup_toolchain: stable
      beta:
        rustup_toolchain: beta
      nightly:
        rustup_toolchain: nightly
      1.40:
        rustup_toolchain: 1.40.0

  steps:
  - ${{ if ne(parameters.name, 'Windows') }}:
    - script: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
        echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
      displayName: Install Rust

  - ${{ if eq(parameters.name, 'Windows') }}:
    - script: |
        curl -sSf -o rustup-init.exe https://win.rustup.rs
        rustup-init.exe -y --default-toolchain %RUSTUP_TOOLCHAIN%
        set PATH=%PATH%;%USERPROFILE%\.cargo\bin
        echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
      displayName: Install Rust (Windows)

  - script: rustup component add clippy
    displayName: Install Clippy
    condition: ne( variables['rustup_toolchain'], 'nightly' )

  - script: |
        rustc -Vv
        cargo -V
    displayName: Query rust and cargo versions

  - script: cargo build -p pyoxidizer -p python-packed-resources
    displayName: Build

  - script: cargo test -p pyoxidizer -p python-packed-resources
    displayName: Test

  - script: cargo clippy -p pyoxidizer -p python-packed-resources -- --allow clippy::cast_ptr_alignment
    displayName: Clippy
    condition: ne( variables['rustup_toolchain'], 'nightly' )

  - script: echo "Foo bar"
